"use strict";

var cov_6xva6iqyf = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js";
  var hash = "f29c6bccdaabb7ed578e12807347671604beb328";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js",
    statementMap: {
      "0": {
        start: {
          line: 33,
          column: 10
        },
        end: {
          line: 33,
          column: 95
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 38,
            column: 7
          }
        },
        line: 9
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _bcryptjs = _interopRequireDefault(require("bcryptjs"));

var _jsonwebtoken = _interopRequireDefault(require("jsonwebtoken"));

var _user = _interopRequireDefault(require("../model/user"));

var _user2 = _interopRequireDefault(require("../data/user"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var signUpController =
/*#__PURE__*/
function () {
  function signUpController() {
    _classCallCheck(this, signUpController);
  }

  _createClass(signUpController, null, [{
    key: "signup",
    value: function signup(req, res) {
      cov_6xva6iqyf.f[0]++;
      cov_6xva6iqyf.s[0]++;
      // const userData = req.body;
      // const salt = bcrypt.genSaltSync(10);
      // const hash = bcrypt.hashSync(userData.password, salt);
      // const user = new User(
      //   userData.id = Data.length,
      //   userData.firstName,
      //   userData.lastName,
      //   userData.country,
      //   userData.phoneNumber,
      //   userData.dateOfBirth,
      //   userData.gender,
      //   userData.email,
      //   userData.password,
      // );
      // if (!Data.find(newUser => newUser.email === userData.email)) {
      //   userData.id = Data.length;
      //   console.log(user);
      //   Data.push(user);
      //   const payload = { subject: user.id };
      //   const token = jwt.sign(payload, 'secretkey');
      res.status(201).json({
        token: token,
        user: user,
        'status': 201,
        'message': 'Register Successful'
      }); // } else {
      //   res.status(401).json({'message':'Email Already Exist', 'status':401});
      // }
    }
  }]);

  return signUpController;
}();

exports.default = signUpController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5qcyJdLCJuYW1lcyI6WyJzaWduVXBDb250cm9sbGVyIiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsInRva2VuIiwidXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7SUFJcUJBLGdCOzs7Ozs7Ozs7MkJBQ0ZDLEcsRUFBSUMsRyxFQUFJO0FBQUE7QUFBQTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0VBLE1BQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLFFBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTQyxRQUFBQSxJQUFJLEVBQUpBLElBQVQ7QUFBZSxrQkFBUyxHQUF4QjtBQUE2QixtQkFBVTtBQUF2QyxPQUFyQixFQXhCaUIsQ0F5Qm5CO0FBRUE7QUFDQTtBQUNEIiwic291cmNlUm9vdCI6Ii9ob21lL3BhdGRldi9EZXNrdG9wL0NsYXNzIFdvcmsvbmV3RXBpYy1tYWlsL2VwaWNfbWFpbC9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWwvdXNlcidcbmltcG9ydCBEYXRhIGZyb20gJy4uL2RhdGEvdXNlcic7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBzaWduVXBDb250cm9sbGVye1xuICAgIHN0YXRpYyBzaWdudXAgKHJlcSxyZXMpe1xuICAgICAgICAvLyBjb25zdCB1c2VyRGF0YSA9IHJlcS5ib2R5O1xuICAgICAgICAvLyBjb25zdCBzYWx0ID0gYmNyeXB0LmdlblNhbHRTeW5jKDEwKTtcbiAgICAgICAgLy8gY29uc3QgaGFzaCA9IGJjcnlwdC5oYXNoU3luYyh1c2VyRGF0YS5wYXNzd29yZCwgc2FsdCk7XG4gICAgICAgIC8vIGNvbnN0IHVzZXIgPSBuZXcgVXNlcihcbiAgICAgICAgLy8gICB1c2VyRGF0YS5pZCA9IERhdGEubGVuZ3RoLFxuICAgICAgICAvLyAgIHVzZXJEYXRhLmZpcnN0TmFtZSxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5sYXN0TmFtZSxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5jb3VudHJ5LFxuICAgICAgICAvLyAgIHVzZXJEYXRhLnBob25lTnVtYmVyLFxuICAgICAgICAvLyAgIHVzZXJEYXRhLmRhdGVPZkJpcnRoLFxuICAgICAgICAvLyAgIHVzZXJEYXRhLmdlbmRlcixcbiAgICAgICAgLy8gICB1c2VyRGF0YS5lbWFpbCxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5wYXNzd29yZCxcbiAgICBcbiAgICAgICAgLy8gKTtcbiAgICAgICAgXG5cbiAgICAgICAgLy8gaWYgKCFEYXRhLmZpbmQobmV3VXNlciA9PiBuZXdVc2VyLmVtYWlsID09PSB1c2VyRGF0YS5lbWFpbCkpIHtcbiAgICAgICAgLy8gICB1c2VyRGF0YS5pZCA9IERhdGEubGVuZ3RoO1xuICAgICAgICAvLyAgIGNvbnNvbGUubG9nKHVzZXIpO1xuICAgICAgICAvLyAgIERhdGEucHVzaCh1c2VyKTtcbiAgICAgICAgLy8gICBjb25zdCBwYXlsb2FkID0geyBzdWJqZWN0OiB1c2VyLmlkIH07XG4gICAgICAgIC8vICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihwYXlsb2FkLCAnc2VjcmV0a2V5Jyk7XG4gICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyB0b2tlbiwgdXNlciwgJ3N0YXR1cyc6MjAxLCAnbWVzc2FnZSc6J1JlZ2lzdGVyIFN1Y2Nlc3NmdWwnIH0pO1xuICAgICAgICAvLyB9IGVsc2Uge1xuICAgIFxuICAgICAgICAvLyAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsnbWVzc2FnZSc6J0VtYWlsIEFscmVhZHkgRXhpc3QnLCAnc3RhdHVzJzo0MDF9KTtcbiAgICAgICAgLy8gfVxuICAgICAgfVxuICAgIH1cbiJdfQ==