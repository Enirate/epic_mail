"use strict";

var cov_gjgaipyzp = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/message.js";
  var hash = "3af82c78731c0027fe6e06da112ef3744c0031b3";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/message.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "1": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "2": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "3": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "4": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "5": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "6": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "7": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "8": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 70
        }
      },
      "9": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 49,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 33
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 41
          }
        }, {
          start: {
            line: 23,
            column: 45
          },
          end: {
            line: 23,
            column: 74
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _user = _interopRequireDefault(require("../data/user"));

var _message = _interopRequireDefault(require("../data/message"));

var _message2 = _interopRequireDefault(require("../model/message"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/* Imports the datastructure that holds users and messages
before continuing */
var MessageController =
/*#__PURE__*/
function () {
  function MessageController() {
    _classCallCheck(this, MessageController);
  }

  _createClass(MessageController, null, [{
    key: "sendMessage",
    value: function sendMessage(req, res) {
      cov_gjgaipyzp.f[0]++;
      var messageData = (cov_gjgaipyzp.s[0]++, req.body);
      var newMessages = (cov_gjgaipyzp.s[1]++, new _message2.default(messageData.messageModelId = _message.default.length, messageData.createdOn = Date.now(), messageData.subject, messageData.message, messageData.parentMessageId, messageData.status, messageData.recievedEmail, messageData.sendersEmail));
      cov_gjgaipyzp.s[2]++;

      if ((cov_gjgaipyzp.b[1][0]++, newMessages.status === 'sent') || (cov_gjgaipyzp.b[1][1]++, newMessages.status === 'read')) {
        cov_gjgaipyzp.b[0][0]++;
        cov_gjgaipyzp.s[3]++;

        _message.default.push(newMmessages);

        var _messageSent = (cov_gjgaipyzp.s[4]++, {
          messageId: newMessages.messageId,
          createdOn: newMessages.createdOn,
          subject: newMessages.subject,
          message: newMessages.message,
          parentMessageId: newMessages.parentMessageId,
          status: newMessages.status
        });

        cov_gjgaipyzp.s[5]++;
        res.status(200).json({
          messageSent: _messageSent
        });
      } else {
        cov_gjgaipyzp.b[0][1]++;
        cov_gjgaipyzp.s[6]++;

        if (newMessages.status === 'draft') {
          cov_gjgaipyzp.b[2][0]++;
          cov_gjgaipyzp.s[7]++;

          _message.default.push(newMessages);

          cov_gjgaipyzp.s[8]++;
          res.json({
            'message': 'Message Saved',
            'status': 200
          });
        } else {
          cov_gjgaipyzp.b[2][1]++;
        }
      }

      cov_gjgaipyzp.s[9]++;
      return res.status(201).json({
        'status': 201,
        messageSent: messageSent
      });
    }
  }]);

  return MessageController;
}();

exports.default = MessageController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2UuanMiXSwibmFtZXMiOlsiTWVzc2FnZUNvbnRyb2xsZXIiLCJyZXEiLCJyZXMiLCJtZXNzYWdlRGF0YSIsImJvZHkiLCJuZXdNZXNzYWdlcyIsIm1lc3NhZ2VNb2RlbCIsIm1lc3NhZ2VNb2RlbElkIiwibWVzc2FnZVN0b3JlIiwibGVuZ3RoIiwiY3JlYXRlZE9uIiwiRGF0ZSIsIm5vdyIsInN1YmplY3QiLCJtZXNzYWdlIiwicGFyZW50TWVzc2FnZUlkIiwic3RhdHVzIiwicmVjaWV2ZWRFbWFpbCIsInNlbmRlcnNFbWFpbCIsInB1c2giLCJuZXdNbWVzc2FnZXMiLCJtZXNzYWdlU2VudCIsIm1lc3NhZ2VJZCIsImpzb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTs7SUFHcUJBLGlCOzs7Ozs7Ozs7Z0NBQ0VDLEcsRUFBS0MsRyxFQUFLO0FBQUE7QUFDekIsVUFBTUMsV0FBVywwQkFBR0YsR0FBRyxDQUFDRyxJQUFQLENBQWpCO0FBRUEsVUFBTUMsV0FBVywwQkFBRyxJQUFJQyxpQkFBSixDQUNoQkgsV0FBVyxDQUFDSSxjQUFaLEdBQTZCQyxpQkFBYUMsTUFEMUIsRUFFaEJOLFdBQVcsQ0FBQ08sU0FBWixHQUF3QkMsSUFBSSxDQUFDQyxHQUFMLEVBRlIsRUFHaEJULFdBQVcsQ0FBQ1UsT0FISSxFQUloQlYsV0FBVyxDQUFDVyxPQUpJLEVBS2hCWCxXQUFXLENBQUNZLGVBTEksRUFNaEJaLFdBQVcsQ0FBQ2EsTUFOSSxFQU9oQmIsV0FBVyxDQUFDYyxhQVBJLEVBUWhCZCxXQUFXLENBQUNlLFlBUkksQ0FBSCxDQUFqQjtBQUh5Qjs7QUFjekIsVUFBSSwwQkFBQWIsV0FBVyxDQUFDVyxNQUFaLEtBQXVCLE1BQXZCLCtCQUFpQ1gsV0FBVyxDQUFDVyxNQUFaLEtBQXVCLE1BQXhELENBQUosRUFBb0U7QUFBQTtBQUFBOztBQUNoRVIseUJBQWFXLElBQWIsQ0FBa0JDLFlBQWxCOztBQUNBLFlBQU1DLFlBQVcsMEJBQUU7QUFDZkMsVUFBQUEsU0FBUyxFQUFDakIsV0FBVyxDQUFDaUIsU0FEUDtBQUVmWixVQUFBQSxTQUFTLEVBQUNMLFdBQVcsQ0FBQ0ssU0FGUDtBQUdmRyxVQUFBQSxPQUFPLEVBQUNSLFdBQVcsQ0FBQ1EsT0FITDtBQUlmQyxVQUFBQSxPQUFPLEVBQUNULFdBQVcsQ0FBQ1MsT0FKTDtBQUtmQyxVQUFBQSxlQUFlLEVBQUNWLFdBQVcsQ0FBQ1UsZUFMYjtBQU1mQyxVQUFBQSxNQUFNLEVBQUNYLFdBQVcsQ0FBQ1c7QUFOSixTQUFGLENBQWpCOztBQUZnRTtBQVdoRWQsUUFBQUEsR0FBRyxDQUNFYyxNQURMLENBQ1ksR0FEWixFQUVLTyxJQUZMLENBRVU7QUFBQ0YsVUFBQUEsV0FBVyxFQUFYQTtBQUFELFNBRlY7QUFHSCxPQWRELE1BY087QUFBQTtBQUFBOztBQUVILFlBQUloQixXQUFXLENBQUNXLE1BQVosS0FBdUIsT0FBM0IsRUFBb0M7QUFBQTtBQUFBOztBQUNoQ1IsMkJBQWFXLElBQWIsQ0FBa0JkLFdBQWxCOztBQURnQztBQUVoQ0gsVUFBQUEsR0FBRyxDQUFDcUIsSUFBSixDQUFTO0FBQUMsdUJBQVcsZUFBWjtBQUE2QixzQkFBVTtBQUF2QyxXQUFUO0FBQ0gsU0FIRDtBQUFBO0FBQUE7QUFLSDs7QUFuQ3dCO0FBc0NyQixhQUFPckIsR0FBRyxDQUNUYyxNQURNLENBQ0MsR0FERCxFQUVOTyxJQUZNLENBRUQ7QUFBQyxrQkFBVSxHQUFYO0FBQWdCRixRQUFBQSxXQUFXLEVBQVhBO0FBQWhCLE9BRkMsQ0FBUDtBQUtQIiwic291cmNlUm9vdCI6Ii9ob21lL3BhdGRldi9EZXNrdG9wL0NsYXNzIFdvcmsvbmV3RXBpYy1tYWlsL2VwaWNfbWFpbC9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlciBmcm9tICcuLi9kYXRhL3VzZXInO1xuaW1wb3J0IG1lc3NhZ2VTdG9yZSBmcm9tICcuLi9kYXRhL21lc3NhZ2UnO1xuaW1wb3J0IG1lc3NhZ2VNb2RlbCBmcm9tICcuLi9tb2RlbC9tZXNzYWdlJztcblxuLyogSW1wb3J0cyB0aGUgZGF0YXN0cnVjdHVyZSB0aGF0IGhvbGRzIHVzZXJzIGFuZCBtZXNzYWdlc1xuYmVmb3JlIGNvbnRpbnVpbmcgKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVzc2FnZUNvbnRyb2xsZXIge1xuICAgIHN0YXRpYyBzZW5kTWVzc2FnZShyZXEsIHJlcykge1xuICAgICAgICBjb25zdCBtZXNzYWdlRGF0YSA9IHJlcS5ib2R5XG5cbiAgICAgICAgY29uc3QgbmV3TWVzc2FnZXMgPSBuZXcgbWVzc2FnZU1vZGVsKFxuICAgICAgICAgICAgbWVzc2FnZURhdGEubWVzc2FnZU1vZGVsSWQgPSBtZXNzYWdlU3RvcmUubGVuZ3RoLFxuICAgICAgICAgICAgbWVzc2FnZURhdGEuY3JlYXRlZE9uID0gRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIG1lc3NhZ2VEYXRhLnN1YmplY3QsXG4gICAgICAgICAgICBtZXNzYWdlRGF0YS5tZXNzYWdlLFxuICAgICAgICAgICAgbWVzc2FnZURhdGEucGFyZW50TWVzc2FnZUlkLFxuICAgICAgICAgICAgbWVzc2FnZURhdGEuc3RhdHVzLFxuICAgICAgICAgICAgbWVzc2FnZURhdGEucmVjaWV2ZWRFbWFpbCxcbiAgICAgICAgICAgIG1lc3NhZ2VEYXRhLnNlbmRlcnNFbWFpbFxuICAgICAgICApXG5cbiAgICAgICAgaWYgKG5ld01lc3NhZ2VzLnN0YXR1cyA9PT0gJ3NlbnQnIHx8IG5ld01lc3NhZ2VzLnN0YXR1cyA9PT0gJ3JlYWQnKSB7XG4gICAgICAgICAgICBtZXNzYWdlU3RvcmUucHVzaChuZXdNbWVzc2FnZXMpO1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZVNlbnQgPXtcbiAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6bmV3TWVzc2FnZXMubWVzc2FnZUlkLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRPbjpuZXdNZXNzYWdlcy5jcmVhdGVkT24sXG4gICAgICAgICAgICAgICAgc3ViamVjdDpuZXdNZXNzYWdlcy5zdWJqZWN0LFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6bmV3TWVzc2FnZXMubWVzc2FnZSxcbiAgICAgICAgICAgICAgICBwYXJlbnRNZXNzYWdlSWQ6bmV3TWVzc2FnZXMucGFyZW50TWVzc2FnZUlkLFxuICAgICAgICAgICAgICAgIHN0YXR1czpuZXdNZXNzYWdlcy5zdGF0dXNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmVzXG4gICAgICAgICAgICAgICAgLnN0YXR1cygyMDApXG4gICAgICAgICAgICAgICAgLmpzb24oe21lc3NhZ2VTZW50fSk7XG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGlmIChuZXdNZXNzYWdlcy5zdGF0dXMgPT09ICdkcmFmdCcpIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlU3RvcmUucHVzaChuZXdNZXNzYWdlcyk7XG4gICAgICAgICAgICAgICAgcmVzLmpzb24oeydtZXNzYWdlJzogJ01lc3NhZ2UgU2F2ZWQnLCAnc3RhdHVzJzogMjAwfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiByZXNcbiAgICAgICAgICAgIC5zdGF0dXMoMjAxKVxuICAgICAgICAgICAgLmpzb24oeydzdGF0dXMnOiAyMDEsIG1lc3NhZ2VTZW50fSk7XG4gICAgICAgIFxuXG4gICAgfVxuXG59XG4iXX0=