"use strict";

var cov_6xva6iqyf = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js";
  var hash = "d3962f88900f9a6586553ba3fae3a7bb0047ebaa";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "1": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "2": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 48
        }
      },
      "3": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 46
        }
      },
      "4": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "5": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "6": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "7": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "8": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "9": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "10": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "11": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "12": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "13": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "14": {
        start: {
          line: 51,
          column: 13
        },
        end: {
          line: 51,
          column: 35
        }
      },
      "15": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "16": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 47
        }
      },
      "17": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "18": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 99
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 86
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 85
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 62,
            column: 4
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 24
          }
        },
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 66
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 45,
            column: 32
          }
        },
        loc: {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 49,
            column: 13
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 53
          },
          end: {
            line: 46,
            column: 54
          }
        },
        loc: {
          start: {
            line: 46,
            column: 73
          },
          end: {
            line: 48,
            column: 17
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _bcryptjs = _interopRequireDefault(require("bcryptjs"));

var _jsonwebtoken = _interopRequireDefault(require("jsonwebtoken"));

var _user = _interopRequireDefault(require("../model/user"));

var _user2 = _interopRequireDefault(require("../data/user"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SignUpController =
/*#__PURE__*/
function () {
  function SignUpController() {
    _classCallCheck(this, SignUpController);
  }

  _createClass(SignUpController, null, [{
    key: "signup",
    value: function signup(req, res) {
      cov_6xva6iqyf.f[0]++;
      // const userData = req.body;
      // const salt = bcrypt.genSaltSync(10);
      // const hash = bcrypt.hashSync(userData.password, salt);
      // const user = new User(
      //   userData.id = Data.length,
      //   userData.firstName,
      //   userData.lastName,
      //   userData.country,
      //   userData.phoneNumber,
      //   userData.dateOfBirth,
      //   userData.gender,
      //   userData.email,
      //   userData.password,
      // );
      // const salt = bcrypt.genSaltSync(10);
      // const hash = bcrypt.hashSync(userData.password, salt);
      var userData = (cov_6xva6iqyf.s[0]++, {});
      cov_6xva6iqyf.s[1]++;
      userData.id = _user2.default.length;
      cov_6xva6iqyf.s[2]++;
      userData.firstName = req.body.firstName;
      cov_6xva6iqyf.s[3]++;
      userData.lastName = req.body.lastName;
      cov_6xva6iqyf.s[4]++;
      userData.email = req.body.email;
      cov_6xva6iqyf.s[5]++;
      userData.phoneNumber = req.body.phoneNumber;
      cov_6xva6iqyf.s[6]++;
      userData.country = req.body.country;
      cov_6xva6iqyf.s[7]++;
      userData.gender = req.body.gender;
      cov_6xva6iqyf.s[8]++;
      userData.password = req.body.password;
      cov_6xva6iqyf.s[9]++;

      if (!_user2.default.find(function (newUser) {
        cov_6xva6iqyf.f[1]++;
        cov_6xva6iqyf.s[10]++;
        return newUser.email === userData.email;
      })) {
        cov_6xva6iqyf.b[0][0]++;
        cov_6xva6iqyf.s[11]++;

        _bcryptjs.default.genSalt(10, function (err, salt) {
          cov_6xva6iqyf.f[2]++;
          cov_6xva6iqyf.s[12]++;

          _bcryptjs.default.hash(userData.password, salt, function (err, hash) {
            cov_6xva6iqyf.f[3]++;
            cov_6xva6iqyf.s[13]++;
            userData.password = hash;
          });
        });

        cov_6xva6iqyf.s[14]++;
        console.log(userData);
        cov_6xva6iqyf.s[15]++;

        _user2.default.push(userData);

        var payload = (cov_6xva6iqyf.s[16]++, {
          subject: _user.default._id
        });
        var token = (cov_6xva6iqyf.s[17]++, _jsonwebtoken.default.sign(payload, 'secretkey'));
        cov_6xva6iqyf.s[18]++;
        res.status(201).json({
          token: token,
          userData: userData,
          'status': 201,
          'message': 'Register Successful'
        });
        cov_6xva6iqyf.s[19]++;
        return res.status(201).json({
          'status': 201,
          'message': 'Register Successful'
        });
      } else {
        cov_6xva6iqyf.b[0][1]++;
        cov_6xva6iqyf.s[20]++;
        return res.status(401).json({
          'message': 'Email Already Exist',
          'status': 401
        });
      }
    }
  }]);

  return SignUpController;
}();

exports.default = SignUpController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5qcyJdLCJuYW1lcyI6WyJTaWduVXBDb250cm9sbGVyIiwicmVxIiwicmVzIiwidXNlckRhdGEiLCJpZCIsImRhdGEiLCJsZW5ndGgiLCJmaXJzdE5hbWUiLCJib2R5IiwibGFzdE5hbWUiLCJlbWFpbCIsInBob25lTnVtYmVyIiwiY291bnRyeSIsImdlbmRlciIsInBhc3N3b3JkIiwiZmluZCIsIm5ld1VzZXIiLCJiY3J5cHQiLCJnZW5TYWx0IiwiZXJyIiwic2FsdCIsImhhc2giLCJjb25zb2xlIiwibG9nIiwicHVzaCIsInBheWxvYWQiLCJzdWJqZWN0IiwidXNlciIsIl9pZCIsInRva2VuIiwiand0Iiwic2lnbiIsInN0YXR1cyIsImpzb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztJQUlxQkEsZ0I7Ozs7Ozs7OzsyQkFDRkMsRyxFQUFJQyxHLEVBQUk7QUFBQTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUo7QUFDQTtBQUVJLFVBQU1DLFFBQVEsMEJBQUcsRUFBSCxDQUFkO0FBcEJtQjtBQXFCbkJBLE1BQUFBLFFBQVEsQ0FBQ0MsRUFBVCxHQUFjQyxlQUFLQyxNQUFuQjtBQXJCbUI7QUFzQm5CSCxNQUFBQSxRQUFRLENBQUNJLFNBQVQsR0FBcUJOLEdBQUcsQ0FBQ08sSUFBSixDQUFTRCxTQUE5QjtBQXRCbUI7QUF1Qm5CSixNQUFBQSxRQUFRLENBQUNNLFFBQVQsR0FBb0JSLEdBQUcsQ0FBQ08sSUFBSixDQUFTQyxRQUE3QjtBQXZCbUI7QUF3Qm5CTixNQUFBQSxRQUFRLENBQUNPLEtBQVQsR0FBaUJULEdBQUcsQ0FBQ08sSUFBSixDQUFTRSxLQUExQjtBQXhCbUI7QUF5Qm5CUCxNQUFBQSxRQUFRLENBQUNRLFdBQVQsR0FBdUJWLEdBQUcsQ0FBQ08sSUFBSixDQUFTRyxXQUFoQztBQXpCbUI7QUEwQm5CUixNQUFBQSxRQUFRLENBQUNTLE9BQVQsR0FBbUJYLEdBQUcsQ0FBQ08sSUFBSixDQUFTSSxPQUE1QjtBQTFCbUI7QUEyQm5CVCxNQUFBQSxRQUFRLENBQUNVLE1BQVQsR0FBa0JaLEdBQUcsQ0FBQ08sSUFBSixDQUFTSyxNQUEzQjtBQTNCbUI7QUE0Qm5CVixNQUFBQSxRQUFRLENBQUNXLFFBQVQsR0FBbUJiLEdBQUcsQ0FBQ08sSUFBSixDQUFTTSxRQUE1QjtBQTVCbUI7O0FBa0NuQixVQUFJLENBQUNULGVBQUtVLElBQUwsQ0FBVSxVQUFBQyxPQUFPLEVBQUk7QUFBQTtBQUFBO0FBQUEsZUFBQUEsT0FBTyxDQUFDTixLQUFSLEtBQWtCUCxRQUFRLENBQUNPLEtBQTNCO0FBQWdDLE9BQXJELENBQUwsRUFBNkQ7QUFBQTtBQUFBOztBQUV6RE8sMEJBQU9DLE9BQVAsQ0FBZSxFQUFmLEVBQW1CLFVBQVNDLEdBQVQsRUFBY0MsSUFBZCxFQUFvQjtBQUFBO0FBQUE7O0FBQ25DSCw0QkFBT0ksSUFBUCxDQUFZbEIsUUFBUSxDQUFDVyxRQUFyQixFQUErQk0sSUFBL0IsRUFBcUMsVUFBU0QsR0FBVCxFQUFjRSxJQUFkLEVBQW9CO0FBQUE7QUFBQTtBQUNyRGxCLFlBQUFBLFFBQVEsQ0FBQ1csUUFBVCxHQUFvQk8sSUFBcEI7QUFDSCxXQUZEO0FBR0gsU0FKRDs7QUFGeUQ7QUFReERDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZcEIsUUFBWjtBQVJ3RDs7QUFTM0RFLHVCQUFLbUIsSUFBTCxDQUFVckIsUUFBVjs7QUFDQSxZQUFNc0IsT0FBTywyQkFBRztBQUFFQyxVQUFBQSxPQUFPLEVBQUVDLGNBQUtDO0FBQWhCLFNBQUgsQ0FBYjtBQUNBLFlBQU1DLEtBQUssMkJBQUdDLHNCQUFJQyxJQUFKLENBQVNOLE9BQVQsRUFBa0IsV0FBbEIsQ0FBSCxDQUFYO0FBWDJEO0FBWTNEdkIsUUFBQUEsR0FBRyxDQUFDOEIsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVKLFVBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTMUIsVUFBQUEsUUFBUSxFQUFSQSxRQUFUO0FBQW1CLG9CQUFTLEdBQTVCO0FBQWlDLHFCQUFVO0FBQTNDLFNBQXJCO0FBWjJEO0FBYTdELGVBQU9ELEdBQUcsQ0FBQzhCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLG9CQUFTLEdBQVY7QUFBZSxxQkFBVTtBQUF6QixTQUFyQixDQUFQO0FBQ0MsT0FkRCxNQWNPO0FBQUE7QUFBQTtBQUVQLGVBQU8vQixHQUFHLENBQUM4QixNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBQyxxQkFBVSxxQkFBWDtBQUFrQyxvQkFBUztBQUEzQyxTQUFyQixDQUFQO0FBQ0M7QUFFTCIsInNvdXJjZVJvb3QiOiIvaG9tZS9wYXRkZXYvRGVza3RvcC9DbGFzcyBXb3JrL25ld0VwaWMtbWFpbC9lcGljX21haWwvc3JjL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcbmltcG9ydCB1c2VyIGZyb20gJy4uL21vZGVsL3VzZXInXG5pbXBvcnQgZGF0YSBmcm9tICcuLi9kYXRhL3VzZXInO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lnblVwQ29udHJvbGxlcntcbiAgICBzdGF0aWMgc2lnbnVwIChyZXEscmVzKXtcbiAgICAgICAgLy8gY29uc3QgdXNlckRhdGEgPSByZXEuYm9keTtcbiAgICAgICAgLy8gY29uc3Qgc2FsdCA9IGJjcnlwdC5nZW5TYWx0U3luYygxMCk7XG4gICAgICAgIC8vIGNvbnN0IGhhc2ggPSBiY3J5cHQuaGFzaFN5bmModXNlckRhdGEucGFzc3dvcmQsIHNhbHQpO1xuICAgICAgICAvLyBjb25zdCB1c2VyID0gbmV3IFVzZXIoXG4gICAgICAgIC8vICAgdXNlckRhdGEuaWQgPSBEYXRhLmxlbmd0aCxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5maXJzdE5hbWUsXG4gICAgICAgIC8vICAgdXNlckRhdGEubGFzdE5hbWUsXG4gICAgICAgIC8vICAgdXNlckRhdGEuY291bnRyeSxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5waG9uZU51bWJlcixcbiAgICAgICAgLy8gICB1c2VyRGF0YS5kYXRlT2ZCaXJ0aCxcbiAgICAgICAgLy8gICB1c2VyRGF0YS5nZW5kZXIsXG4gICAgICAgIC8vICAgdXNlckRhdGEuZW1haWwsXG4gICAgICAgIC8vICAgdXNlckRhdGEucGFzc3dvcmQsXG4gICAgXG4gICAgICAgIC8vICk7XG4gICAgICAgIFxuICAgIC8vIGNvbnN0IHNhbHQgPSBiY3J5cHQuZ2VuU2FsdFN5bmMoMTApO1xuICAgIC8vIGNvbnN0IGhhc2ggPSBiY3J5cHQuaGFzaFN5bmModXNlckRhdGEucGFzc3dvcmQsIHNhbHQpO1xuXG4gICAgICAgIGNvbnN0IHVzZXJEYXRhID0ge307XG4gICAgICAgIHVzZXJEYXRhLmlkID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIHVzZXJEYXRhLmZpcnN0TmFtZSA9IHJlcS5ib2R5LmZpcnN0TmFtZTtcbiAgICAgICAgdXNlckRhdGEubGFzdE5hbWUgPSByZXEuYm9keS5sYXN0TmFtZTtcbiAgICAgICAgdXNlckRhdGEuZW1haWwgPSByZXEuYm9keS5lbWFpbDtcbiAgICAgICAgdXNlckRhdGEucGhvbmVOdW1iZXIgPSByZXEuYm9keS5waG9uZU51bWJlcjtcbiAgICAgICAgdXNlckRhdGEuY291bnRyeSA9IHJlcS5ib2R5LmNvdW50cnk7XG4gICAgICAgIHVzZXJEYXRhLmdlbmRlciA9IHJlcS5ib2R5LmdlbmRlclxuICAgICAgICB1c2VyRGF0YS5wYXNzd29yZCA9cmVxLmJvZHkucGFzc3dvcmQgXG4gICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgaWYgKCFkYXRhLmZpbmQobmV3VXNlciA9PiBuZXdVc2VyLmVtYWlsID09PSB1c2VyRGF0YS5lbWFpbCkpIHtcblxuICAgICAgICAgICAgYmNyeXB0LmdlblNhbHQoMTAsIGZ1bmN0aW9uKGVyciwgc2FsdCkge1xuICAgICAgICAgICAgICAgIGJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkLCBzYWx0LCBmdW5jdGlvbihlcnIsIGhhc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgdXNlckRhdGEucGFzc3dvcmQgPSBoYXNoXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJEYXRhKTtcbiAgICAgICAgICBkYXRhLnB1c2godXNlckRhdGEpO1xuICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSB7IHN1YmplY3Q6IHVzZXIuX2lkIH07XG4gICAgICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihwYXlsb2FkLCAnc2VjcmV0a2V5Jyk7XG4gICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyB0b2tlbiwgdXNlckRhdGEsICdzdGF0dXMnOjIwMSwgJ21lc3NhZ2UnOidSZWdpc3RlciBTdWNjZXNzZnVsJyB9KTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKHsnc3RhdHVzJzoyMDEsICdtZXNzYWdlJzonUmVnaXN0ZXIgU3VjY2Vzc2Z1bCcgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7J21lc3NhZ2UnOidFbWFpbCBBbHJlYWR5IEV4aXN0JywgJ3N0YXR1cyc6NDAxfSk7XG4gICAgICAgIH1cbiAgICBcbiAgIH1cbiAgICB9XG4iXX0=