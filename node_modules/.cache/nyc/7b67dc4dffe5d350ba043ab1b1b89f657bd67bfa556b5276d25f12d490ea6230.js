"use strict";

var cov_6xva6iqyf = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js";
  var hash = "bbabdbd0cae31552a8725dbbb70cb9badb43a8b1";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/signup.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "1": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "2": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 61
        }
      },
      "3": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "4": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "5": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "6": {
        start: {
          line: 28,
          column: 10
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "7": {
        start: {
          line: 29,
          column: 10
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "8": {
        start: {
          line: 30,
          column: 10
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "9": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "10": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 54
        }
      },
      "11": {
        start: {
          line: 33,
          column: 10
        },
        end: {
          line: 33,
          column: 95
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 86
        }
      },
      "13": {
        start: {
          line: 37,
          column: 10
        },
        end: {
          line: 37,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 39,
            column: 7
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 27,
            column: 66
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _bcryptjs = _interopRequireDefault(require("bcryptjs"));

var _jsonwebtoken = _interopRequireDefault(require("jsonwebtoken"));

var _user = _interopRequireDefault(require("../model/user"));

var _user2 = _interopRequireDefault(require("../data/user"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var signUpController =
/*#__PURE__*/
function () {
  function signUpController() {
    _classCallCheck(this, signUpController);
  }

  _createClass(signUpController, null, [{
    key: "signup",
    value: function signup(req, res) {
      cov_6xva6iqyf.f[0]++;
      var userData = (cov_6xva6iqyf.s[0]++, req.body);
      var salt = (cov_6xva6iqyf.s[1]++, _bcryptjs.default.genSaltSync(10));
      var hash = (cov_6xva6iqyf.s[2]++, _bcryptjs.default.hashSync(userData.password, salt));
      var user = (cov_6xva6iqyf.s[3]++, new _user.default(userData.id = _user2.default.length, userData.firstName, userData.lastName, userData.country, userData.phoneNumber, userData.dateOfBirth, userData.gender, userData.email, userData.password));
      cov_6xva6iqyf.s[4]++;

      if (!_user2.default.find(function (newUser) {
        cov_6xva6iqyf.f[1]++;
        cov_6xva6iqyf.s[5]++;
        return newUser.email === userData.email;
      })) {
        cov_6xva6iqyf.b[0][0]++;
        cov_6xva6iqyf.s[6]++;
        userData.id = _user2.default.length;
        cov_6xva6iqyf.s[7]++;
        console.log(user);
        cov_6xva6iqyf.s[8]++;

        _user2.default.push(user);

        var payload = (cov_6xva6iqyf.s[9]++, {
          subject: user.id
        });
        var token = (cov_6xva6iqyf.s[10]++, _jsonwebtoken.default.sign(payload, 'secretkey'));
        cov_6xva6iqyf.s[11]++;
        res.status(201).json({
          token: token,
          user: user,
          'status': 201,
          'message': 'Register Successful'
        });
        cov_6xva6iqyf.s[12]++;
        return res.status(201).json({
          'status': 201,
          'message': 'Register Successful'
        });
      } else {
        cov_6xva6iqyf.b[0][1]++;
        cov_6xva6iqyf.s[13]++;
        return res.status(401).json({
          'message': 'Email Already Exist',
          'status': 401
        });
      }
    }
  }]);

  return signUpController;
}();

exports.default = signUpController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ251cC5qcyJdLCJuYW1lcyI6WyJzaWduVXBDb250cm9sbGVyIiwicmVxIiwicmVzIiwidXNlckRhdGEiLCJib2R5Iiwic2FsdCIsImJjcnlwdCIsImdlblNhbHRTeW5jIiwiaGFzaCIsImhhc2hTeW5jIiwicGFzc3dvcmQiLCJ1c2VyIiwiVXNlciIsImlkIiwiRGF0YSIsImxlbmd0aCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiY291bnRyeSIsInBob25lTnVtYmVyIiwiZGF0ZU9mQmlydGgiLCJnZW5kZXIiLCJlbWFpbCIsImZpbmQiLCJuZXdVc2VyIiwiY29uc29sZSIsImxvZyIsInB1c2giLCJwYXlsb2FkIiwic3ViamVjdCIsInRva2VuIiwiand0Iiwic2lnbiIsInN0YXR1cyIsImpzb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0lBSXFCQSxnQjs7Ozs7Ozs7OzJCQUNGQyxHLEVBQUlDLEcsRUFBSTtBQUFBO0FBQ25CLFVBQU1DLFFBQVEsMEJBQUdGLEdBQUcsQ0FBQ0csSUFBUCxDQUFkO0FBQ0EsVUFBTUMsSUFBSSwwQkFBR0Msa0JBQU9DLFdBQVAsQ0FBbUIsRUFBbkIsQ0FBSCxDQUFWO0FBQ0EsVUFBTUMsSUFBSSwwQkFBR0Ysa0JBQU9HLFFBQVAsQ0FBZ0JOLFFBQVEsQ0FBQ08sUUFBekIsRUFBbUNMLElBQW5DLENBQUgsQ0FBVjtBQUNBLFVBQU1NLElBQUksMEJBQUcsSUFBSUMsYUFBSixDQUNYVCxRQUFRLENBQUNVLEVBQVQsR0FBY0MsZUFBS0MsTUFEUixFQUVYWixRQUFRLENBQUNhLFNBRkUsRUFHWGIsUUFBUSxDQUFDYyxRQUhFLEVBSVhkLFFBQVEsQ0FBQ2UsT0FKRSxFQUtYZixRQUFRLENBQUNnQixXQUxFLEVBTVhoQixRQUFRLENBQUNpQixXQU5FLEVBT1hqQixRQUFRLENBQUNrQixNQVBFLEVBUVhsQixRQUFRLENBQUNtQixLQVJFLEVBU1huQixRQUFRLENBQUNPLFFBVEUsQ0FBSCxDQUFWO0FBSm1COztBQWtCbkIsVUFBSSxDQUFDSSxlQUFLUyxJQUFMLENBQVUsVUFBQUMsT0FBTyxFQUFJO0FBQUE7QUFBQTtBQUFBLGVBQUFBLE9BQU8sQ0FBQ0YsS0FBUixLQUFrQm5CLFFBQVEsQ0FBQ21CLEtBQTNCO0FBQWdDLE9BQXJELENBQUwsRUFBNkQ7QUFBQTtBQUFBO0FBQzNEbkIsUUFBQUEsUUFBUSxDQUFDVSxFQUFULEdBQWNDLGVBQUtDLE1BQW5CO0FBRDJEO0FBRTNEVSxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWWYsSUFBWjtBQUYyRDs7QUFHM0RHLHVCQUFLYSxJQUFMLENBQVVoQixJQUFWOztBQUNBLFlBQU1pQixPQUFPLDBCQUFHO0FBQUVDLFVBQUFBLE9BQU8sRUFBRWxCLElBQUksQ0FBQ0U7QUFBaEIsU0FBSCxDQUFiO0FBQ0EsWUFBTWlCLEtBQUssMkJBQUdDLHNCQUFJQyxJQUFKLENBQVNKLE9BQVQsRUFBa0IsV0FBbEIsQ0FBSCxDQUFYO0FBTDJEO0FBTTNEMUIsUUFBQUEsR0FBRyxDQUFDK0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVKLFVBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTbkIsVUFBQUEsSUFBSSxFQUFKQSxJQUFUO0FBQWUsb0JBQVMsR0FBeEI7QUFBNkIscUJBQVU7QUFBdkMsU0FBckI7QUFOMkQ7QUFPN0QsZUFBT1QsR0FBRyxDQUFDK0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUMsb0JBQVMsR0FBVjtBQUFlLHFCQUFVO0FBQXpCLFNBQXJCLENBQVA7QUFDQyxPQVJELE1BUU87QUFBQTtBQUFBO0FBRUwsZUFBT2hDLEdBQUcsQ0FBQytCLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDLHFCQUFVLHFCQUFYO0FBQWtDLG9CQUFTO0FBQTNDLFNBQXJCLENBQVA7QUFDRDtBQUNGIiwic291cmNlUm9vdCI6Ii9ob21lL3BhdGRldi9EZXNrdG9wL0NsYXNzIFdvcmsvbmV3RXBpYy1tYWlsL2VwaWNfbWFpbC9zcmMvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWwvdXNlcidcbmltcG9ydCBEYXRhIGZyb20gJy4uL2RhdGEvdXNlcic7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBzaWduVXBDb250cm9sbGVye1xuICAgIHN0YXRpYyBzaWdudXAgKHJlcSxyZXMpe1xuICAgICAgICBjb25zdCB1c2VyRGF0YSA9IHJlcS5ib2R5O1xuICAgICAgICBjb25zdCBzYWx0ID0gYmNyeXB0LmdlblNhbHRTeW5jKDEwKTtcbiAgICAgICAgY29uc3QgaGFzaCA9IGJjcnlwdC5oYXNoU3luYyh1c2VyRGF0YS5wYXNzd29yZCwgc2FsdCk7XG4gICAgICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcihcbiAgICAgICAgICB1c2VyRGF0YS5pZCA9IERhdGEubGVuZ3RoLFxuICAgICAgICAgIHVzZXJEYXRhLmZpcnN0TmFtZSxcbiAgICAgICAgICB1c2VyRGF0YS5sYXN0TmFtZSxcbiAgICAgICAgICB1c2VyRGF0YS5jb3VudHJ5LFxuICAgICAgICAgIHVzZXJEYXRhLnBob25lTnVtYmVyLFxuICAgICAgICAgIHVzZXJEYXRhLmRhdGVPZkJpcnRoLFxuICAgICAgICAgIHVzZXJEYXRhLmdlbmRlcixcbiAgICAgICAgICB1c2VyRGF0YS5lbWFpbCxcbiAgICAgICAgICB1c2VyRGF0YS5wYXNzd29yZCxcbiAgICBcbiAgICAgICAgKTtcbiAgICAgICAgXG5cbiAgICAgICAgaWYgKCFEYXRhLmZpbmQobmV3VXNlciA9PiBuZXdVc2VyLmVtYWlsID09PSB1c2VyRGF0YS5lbWFpbCkpIHtcbiAgICAgICAgICB1c2VyRGF0YS5pZCA9IERhdGEubGVuZ3RoO1xuICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXIpO1xuICAgICAgICAgIERhdGEucHVzaCh1c2VyKTtcbiAgICAgICAgICBjb25zdCBwYXlsb2FkID0geyBzdWJqZWN0OiB1c2VyLmlkIH07XG4gICAgICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihwYXlsb2FkLCAnc2VjcmV0a2V5Jyk7XG4gICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyB0b2tlbiwgdXNlciwgJ3N0YXR1cyc6MjAxLCAnbWVzc2FnZSc6J1JlZ2lzdGVyIFN1Y2Nlc3NmdWwnIH0pO1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oeydzdGF0dXMnOjIwMSwgJ21lc3NhZ2UnOidSZWdpc3RlciBTdWNjZXNzZnVsJyB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICBcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeydtZXNzYWdlJzonRW1haWwgQWxyZWFkeSBFeGlzdCcsICdzdGF0dXMnOjQwMX0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuIl19