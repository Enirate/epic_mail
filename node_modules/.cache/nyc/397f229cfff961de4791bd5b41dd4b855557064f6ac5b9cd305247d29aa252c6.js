"use strict";

var cov_gjgaipyzp = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/message.js";
  var hash = "66b329b1d18a905c58a1cb605148ef2e6fda1b12";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/controllers/message.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 18
        }
      },
      "1": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "2": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "3": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "4": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "5": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "6": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "7": {
        start: {
          line: 31,
          column: 32
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "8": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 91
        }
      },
      "9": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "10": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "11": {
        start: {
          line: 45,
          column: 36
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "12": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 54,
          column: 96
        }
      },
      "13": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 60,
          column: 17
        }
      },
      "14": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "15": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "16": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 78
        }
      },
      "17": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "18": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "19": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "20": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "21": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 113
        }
      },
      "22": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 112
        }
      },
      "23": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 50
        }
      },
      "24": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 102
        }
      },
      "25": {
        start: {
          line: 90,
          column: 62
        },
        end: {
          line: 90,
          column: 101
        }
      },
      "26": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 62
        }
      },
      "27": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 6
        }
      },
      "28": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 64
        }
      },
      "29": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 38
        }
      },
      "30": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 77
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 36
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 64
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 78
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        loc: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 75,
            column: 68
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 112
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 90,
            column: 47
          }
        },
        loc: {
          start: {
            line: 90,
            column: 62
          },
          end: {
            line: 90,
            column: 101
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 94,
            column: 0
          },
          end: {
            line: 94,
            column: 1
          }
        },
        loc: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 94
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        loc: {
          start: {
            line: 96,
            column: 24
          },
          end: {
            line: 96,
            column: 64
          }
        },
        line: 96
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 24
          }
        }, {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 57
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        }, {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 43,
            column: 83
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        }, {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 65
          }
        }, {
          start: {
            line: 82,
            column: 69
          },
          end: {
            line: 82,
            column: 112
          }
        }],
        line: 82
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _bodyParser = _interopRequireDefault(require("body-parser"));

var _user = _interopRequireDefault(require("../data/user"));

var _message = _interopRequireDefault(require("../data/message"));

var _message2 = _interopRequireDefault(require("../model/message"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

cov_gjgaipyzp.s[0]++;

/* Imports the datastructure that holds users and messages
before continuing */
_bodyParser.default.json();

var MessageController =
/*#__PURE__*/
function () {
  function MessageController() {
    _classCallCheck(this, MessageController);
  }

  _createClass(MessageController, null, [{
    key: "sendMessage",
    value: function sendMessage(req, res) {
      cov_gjgaipyzp.f[0]++;
      var messageData = (cov_gjgaipyzp.s[1]++, req.body);
      var newMessages = (cov_gjgaipyzp.s[2]++, new _message2.default(messageData.messageId = _message.default.length, messageData.createdOn = Date.now, messageData.subject, messageData.message, messageData.parentMessageId, messageData.status, messageData.recieversEmail, messageData.sendersEmail));
      var evaluateUser = (cov_gjgaipyzp.s[3]++, _user.default.find(function (dataBaseUser) {
        cov_gjgaipyzp.f[1]++;
        cov_gjgaipyzp.s[4]++;
        return dataBaseUser.email === newMessages.recieversEmail;
      }));
      cov_gjgaipyzp.s[5]++;

      if ((cov_gjgaipyzp.b[1][0]++, evaluateUser) && (cov_gjgaipyzp.b[1][1]++, newMessages.status === 'sent')) {
        cov_gjgaipyzp.b[0][0]++;
        cov_gjgaipyzp.s[6]++;

        _message.default.push(newMessages);

        var sentMessage = (cov_gjgaipyzp.s[7]++, {
          messageId: newMessages.messageId,
          createdOn: newMessages.createdOn,
          subject: newMessages.subject,
          message: newMessages.message,
          status: newMessages.status
        });
        cov_gjgaipyzp.s[8]++;
        res.status(201).json({
          'status': 201,
          sentMessage: sentMessage,
          'message': 'Message Sent Successfully'
        });
      } else {
        cov_gjgaipyzp.b[0][1]++;
        cov_gjgaipyzp.s[9]++;

        if ((cov_gjgaipyzp.b[3][0]++, newMessages.status === 'draft') || (cov_gjgaipyzp.b[3][1]++, newMessages.recieversEmail === '')) {
          cov_gjgaipyzp.b[2][0]++;
          cov_gjgaipyzp.s[10]++;

          _message.default.push(newMessages);

          var _sentMessage = (cov_gjgaipyzp.s[11]++, {
            messageId: newMessages.messageId,
            createdOn: newMessages.createdOn,
            subject: newMessages.subject,
            message: newMessages.message,
            status: newMessages.status
          });

          cov_gjgaipyzp.s[12]++;
          res.status(201).json({
            'status': 201,
            sentMessage: _sentMessage,
            'message': 'Message Saved Successfully'
          });
        } else {
          cov_gjgaipyzp.b[2][1]++;
          cov_gjgaipyzp.s[13]++;

          if (!evaluateUser) {
            cov_gjgaipyzp.b[4][0]++;
            cov_gjgaipyzp.s[14]++;
            res.status(401).json({
              'message': "Invalid Email"
            });
          } else {
            cov_gjgaipyzp.b[4][1]++;
          }
        }
      }
    }
  }, {
    key: "getAllMessages",
    value: function getAllMessages(req, res) {
      cov_gjgaipyzp.f[2]++;
      var recievedMessages = (cov_gjgaipyzp.s[15]++, _message.default.filter(function (recievedMessages) {
        cov_gjgaipyzp.f[3]++;
        cov_gjgaipyzp.s[16]++;
        return recievedMessages.recieversId === req.params.id;
      }));
      cov_gjgaipyzp.s[17]++;
      res.status(200).json({
        'status': 200,
        recievedMessages: recievedMessages
      });
    }
  }, {
    key: "getSpecificMail",
    value: function getSpecificMail(req, res) {
      cov_gjgaipyzp.f[4]++;
      cov_gjgaipyzp.s[18]++;
      specificMessages = _message.default.filter(function (specificMail) {
        cov_gjgaipyzp.f[5]++;
        cov_gjgaipyzp.s[19]++;
        return specificMail.messageId === req.params.id;
      });
      cov_gjgaipyzp.s[20]++;
      res(200).json({
        'status': 200,
        specificMessages: specificMessages
      });
    }
  }, {
    key: "getAllUreadMessages",
    value: function getAllUreadMessages(req, res) {
      cov_gjgaipyzp.f[6]++;
      cov_gjgaipyzp.s[21]++;

      var ureadMessages = function ureadMessages(unreadMessages) {
        cov_gjgaipyzp.f[7]++;
        cov_gjgaipyzp.s[22]++;
        return (cov_gjgaipyzp.b[5][0]++, unreadMessages.status === 'unread') && (cov_gjgaipyzp.b[5][1]++, unreadMessages.recieverId === req.params.id);
      };

      cov_gjgaipyzp.s[23]++;
      res.status(200).json({
        'status': 200,
        ureadMessages: ureadMessages
      });
    }
  }, {
    key: "getSentMessages",
    value: function getSentMessages(req, res) {
      cov_gjgaipyzp.f[8]++;
      cov_gjgaipyzp.s[24]++;
      allsentMessagses = _message.default.filter(function (sentMessages) {
        cov_gjgaipyzp.f[9]++;
        cov_gjgaipyzp.s[25]++;
        return sentMessages.senderId === req.params.id;
      });
      cov_gjgaipyzp.s[26]++;
      res.status(200).json({
        'status': 200,
        allsentMessagses: allsentMessagses
      });
    }
  }, {
    key: "deleteAspecificMail",
    value: function deleteAspecificMail(req, res) {
      cov_gjgaipyzp.f[10]++;
      cov_gjgaipyzp.s[27]++;
      messagtoDelete = _message.default.filter(function (specificMail) {
        cov_gjgaipyzp.f[11]++;
        cov_gjgaipyzp.s[28]++;
        return specificMail.messageId === req.params.id;
      });
      cov_gjgaipyzp.s[29]++;

      _message.default.pop(messagetoDelete);

      cov_gjgaipyzp.s[30]++;
      res(200).json({
        'status': 200,
        'message': 'Message Deleted'
      });
    }
  }]);

  return MessageController;
}();

exports.default = MessageController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,