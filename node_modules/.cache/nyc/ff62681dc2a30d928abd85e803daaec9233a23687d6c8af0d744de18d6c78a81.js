"use strict";

var cov_1zylbvwgs3 = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/test/test.js";
  var hash = "e8faf1349c569991313d2e048cd56ee74bf5107c";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/test/test.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 26
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 19
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 58,
          column: 3
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "5": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 21,
          column: 10
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "11": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "12": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "14": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 57,
          column: 7
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "16": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 8,
            column: 35
          }
        },
        loc: {
          start: {
            line: 8,
            column: 38
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 41
          },
          end: {
            line: 9,
            column: 42
          }
        },
        loc: {
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 39
          },
          end: {
            line: 10,
            column: 40
          }
        },
        loc: {
          start: {
            line: 10,
            column: 51
          },
          end: {
            line: 26,
            column: 9
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 28,
            column: 42
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 66
          },
          end: {
            line: 29,
            column: 67
          }
        },
        loc: {
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 42
          }
        },
        loc: {
          start: {
            line: 46,
            column: 45
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 54
          },
          end: {
            line: 47,
            column: 55
          }
        },
        loc: {
          start: {
            line: 47,
            column: 66
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 47
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _chai = _interopRequireDefault(require("chai"));

var _chaiHttp = _interopRequireDefault(require("chai-http"));

var _app = _interopRequireDefault(require("../app"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var expect = (cov_1zylbvwgs3.s[0]++, _chai.default.expect);
cov_1zylbvwgs3.s[1]++;

_chai.default.use(_chaiHttp.default);

cov_1zylbvwgs3.s[2]++;
describe('Testing the Auth Route', function () {
  cov_1zylbvwgs3.f[0]++;
  cov_1zylbvwgs3.s[3]++;
  describe('Test the Signup Endpoint', function () {
    cov_1zylbvwgs3.f[1]++;
    cov_1zylbvwgs3.s[4]++;
    it('Should create a new user',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee() {
      var _chai$request$post$ty;

      var res;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cov_1zylbvwgs3.f[2]++;
              cov_1zylbvwgs3.s[5]++;
              _context.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/signup/').type('form').send((_chai$request$post$ty = {
                "firstName": "Pat",
                "lastName": "Okuns",
                "country": "nigeria",
                "email": " jus@123.com",
                "dateOfBirth": "123",
                "gender": "Male"
              }, _defineProperty(_chai$request$post$ty, "email", "e@b.com"), _defineProperty(_chai$request$post$ty, "password", "123"), _chai$request$post$ty));

            case 4:
              res = _context.sent;
              cov_1zylbvwgs3.s[6]++;

              _chai.default.expect(res).to.have.status(201);

              cov_1zylbvwgs3.s[7]++;

              _chai.default.expect(res.body).to.be.a('object');

              cov_1zylbvwgs3.s[8]++;

              _chai.default.expect(res.body).to.have.property('token');

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
  });
  cov_1zylbvwgs3.s[9]++;
  describe('Test the Signup Endpoint', function () {
    cov_1zylbvwgs3.f[3]++;
    cov_1zylbvwgs3.s[10]++;
    it('Should return an error for a user that already exit',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee2() {
      var _chai$request$post$ty2;

      var res;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              cov_1zylbvwgs3.f[4]++;
              cov_1zylbvwgs3.s[11]++;
              _context2.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/signup/').type('form').send((_chai$request$post$ty2 = {
                "firstName": "Pat",
                "lastName": "Okuns",
                "country": "nigeria",
                "email": " jus@123.com",
                "dateOfBirth": "123",
                "gender": "Male"
              }, _defineProperty(_chai$request$post$ty2, "email", "e@b.com"), _defineProperty(_chai$request$post$ty2, "password", "123"), _chai$request$post$ty2));

            case 4:
              res = _context2.sent;
              cov_1zylbvwgs3.s[12]++;

              _chai.default.expect(res).to.have.status(401);

              cov_1zylbvwgs3.s[13]++;

              _chai.default.expect(res.body).to.have.property('message');

            case 9:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));
  });
  cov_1zylbvwgs3.s[14]++;
  describe('Test the Signup Endpoint', function () {
    cov_1zylbvwgs3.f[5]++;
    cov_1zylbvwgs3.s[15]++;
    it('Should login an already registered user',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee3() {
      var res;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              cov_1zylbvwgs3.f[6]++;
              cov_1zylbvwgs3.s[16]++;
              _context3.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/login/').type('form').send({
                "email": "e@b.com",
                "password": "123"
              });

            case 4:
              res = _context3.sent;
              cov_1zylbvwgs3.s[17]++;

              _chai.default.expect(res).to.have.status(201); // chai.expect(res.body).to.have.property('token');


            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    })));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZXhwZWN0IiwiY2hhaSIsInVzZSIsImNoYWlIdHRwIiwiZGVzY3JpYmUiLCJpdCIsInJlcXVlc3QiLCJzZXJ2ZXIiLCJwb3N0IiwidHlwZSIsInNlbmQiLCJyZXMiLCJ0byIsImhhdmUiLCJzdGF0dXMiLCJib2R5IiwiYmUiLCJhIiwicHJvcGVydHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxNQUFNLDJCQUFHQyxjQUFLRCxNQUFSLENBQVo7OztBQUNBQyxjQUFLQyxHQUFMLENBQVNDLGlCQUFUOzs7QUFFQUMsUUFBUSxDQUFDLHdCQUFELEVBQTBCLFlBQUk7QUFBQTtBQUFBO0FBQ2xDQSxFQUFBQSxRQUFRLENBQUMsMEJBQUQsRUFBNkIsWUFBSTtBQUFBO0FBQUE7QUFDckNDLElBQUFBLEVBQUUsQ0FBQywwQkFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBLDRCQUE2QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7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QUFZSCxDQWxETyxDQUFSIiwic291cmNlUm9vdCI6Ii9ob21lL3BhdGRldi9EZXNrdG9wL0NsYXNzIFdvcmsvbmV3RXBpYy1tYWlsL2VwaWNfbWFpbC9zcmMvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlIdHRwIGZyb20gJ2NoYWktaHR0cCdcbmltcG9ydCBzZXJ2ZXIgZnJvbSAnLi4vYXBwJztcblxuY29uc3QgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XG5jaGFpLnVzZShjaGFpSHR0cCk7XG5cbmRlc2NyaWJlKCdUZXN0aW5nIHRoZSBBdXRoIFJvdXRlJywoKT0+e1xuICAgIGRlc2NyaWJlKCdUZXN0IHRoZSBTaWdudXAgRW5kcG9pbnQnLCAoKT0+e1xuICAgICAgICBpdCgnU2hvdWxkIGNyZWF0ZSBhIG5ldyB1c2VyJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBjaGFpLnJlcXVlc3Qoc2VydmVyKS5wb3N0KCcvYXBpL3YxL2F1dGgvc2lnbnVwLycpLnR5cGUoJ2Zvcm0nKS5zZW5kKHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgXCJmaXJzdE5hbWVcIjpcIlBhdFwiLFxuXHRcImxhc3ROYW1lXCI6XCJPa3Vuc1wiLFxuXHRcImNvdW50cnlcIjpcIm5pZ2VyaWFcIixcblx0XCJlbWFpbFwiOlwiIGp1c0AxMjMuY29tXCIsXG5cdFwiZGF0ZU9mQmlydGhcIjpcIjEyM1wiLFxuXHRcImdlbmRlclwiOlwiTWFsZVwiLFxuXHRcImVtYWlsXCI6XCJlQGIuY29tXCIsXG5cdFwicGFzc3dvcmRcIjpcIjEyM1wiXG4gICAgICAgIH0pO1xuICAgICAgICBjaGFpLmV4cGVjdChyZXMpLnRvLmhhdmUuc3RhdHVzKDIwMSk7XG4gICAgICAgIGNoYWkuZXhwZWN0KHJlcy5ib2R5KS50by5iZS5hKCdvYmplY3QnKTtcbiAgICAgICAgY2hhaS5leHBlY3QocmVzLmJvZHkpLnRvLmhhdmUucHJvcGVydHkoJ3Rva2VuJyk7XG4gICAgICAgIFxuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBkZXNjcmliZSgnVGVzdCB0aGUgU2lnbnVwIEVuZHBvaW50JywgKCk9PntcbiAgICAgICAgaXQoJ1Nob3VsZCByZXR1cm4gYW4gZXJyb3IgZm9yIGEgdXNlciB0aGF0IGFscmVhZHkgZXhpdCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgY2hhaS5yZXF1ZXN0KHNlcnZlcikucG9zdCgnL2FwaS92MS9hdXRoL3NpZ251cC8nKS50eXBlKCdmb3JtJykuc2VuZCh7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFwiZmlyc3ROYW1lXCI6XCJQYXRcIixcblx0XCJsYXN0TmFtZVwiOlwiT2t1bnNcIixcblx0XCJjb3VudHJ5XCI6XCJuaWdlcmlhXCIsXG5cdFwiZW1haWxcIjpcIiBqdXNAMTIzLmNvbVwiLFxuXHRcImRhdGVPZkJpcnRoXCI6XCIxMjNcIixcblx0XCJnZW5kZXJcIjpcIk1hbGVcIixcblx0XCJlbWFpbFwiOlwiZUBiLmNvbVwiLFxuXHRcInBhc3N3b3JkXCI6XCIxMjNcIlxuICAgICAgICB9KTtcbiAgICAgICAgY2hhaS5leHBlY3QocmVzKS50by5oYXZlLnN0YXR1cyg0MDEpO1xuICAgICAgICBjaGFpLmV4cGVjdChyZXMuYm9keSkudG8uaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpO1xuICAgICAgICBcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ1Rlc3QgdGhlIFNpZ251cCBFbmRwb2ludCcsICgpPT57XG4gICAgICAgIGl0KCdTaG91bGQgbG9naW4gYW4gYWxyZWFkeSByZWdpc3RlcmVkIHVzZXInLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNoYWkucmVxdWVzdChzZXJ2ZXIpLnBvc3QoJy9hcGkvdjEvYXV0aC9sb2dpbi8nKS50eXBlKCdmb3JtJykuc2VuZCh7XG4gICAgICAgICAgICBcImVtYWlsXCI6XCJlQGIuY29tXCIsXG5cdFwicGFzc3dvcmRcIjpcIjEyM1wiXG5cdFxuICAgICAgICB9KTtcbiAgICAgICAgY2hhaS5leHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDEpO1xuICAgICAgICAvLyBjaGFpLmV4cGVjdChyZXMuYm9keSkudG8uaGF2ZS5wcm9wZXJ0eSgndG9rZW4nKTtcbiAgICAgICAgXG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbiJdfQ==