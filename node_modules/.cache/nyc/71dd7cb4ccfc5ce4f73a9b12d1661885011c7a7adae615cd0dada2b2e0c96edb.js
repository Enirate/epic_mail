"use strict";

var cov_1zylbvwgs3 = function () {
  var path = "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/test/test.js";
  var hash = "c840e7a8db64b52ec6aa36fba052160934f529dd";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/patdev/Desktop/Class Work/newEpic-mail/epic_mail/src/test/test.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 19
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "5": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 22,
          column: 10
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "9": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "11": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 58
        }
      },
      "14": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "15": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "16": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "17": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 45
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 58
        }
      },
      "19": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "20": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "21": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 35
          }
        },
        loc: {
          start: {
            line: 9,
            column: 38
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 41
          },
          end: {
            line: 10,
            column: 42
          }
        },
        loc: {
          start: {
            line: 10,
            column: 45
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 39
          },
          end: {
            line: 11,
            column: 40
          }
        },
        loc: {
          start: {
            line: 11,
            column: 51
          },
          end: {
            line: 27,
            column: 9
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 29,
            column: 42
          }
        },
        loc: {
          start: {
            line: 29,
            column: 45
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 66
          },
          end: {
            line: 30,
            column: 67
          }
        },
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 47,
            column: 41
          }
        },
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 48,
            column: 63
          }
        },
        loc: {
          start: {
            line: 48,
            column: 74
          },
          end: {
            line: 57,
            column: 9
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 40
          },
          end: {
            line: 59,
            column: 41
          }
        },
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 62
          },
          end: {
            line: 60,
            column: 63
          }
        },
        loc: {
          start: {
            line: 60,
            column: 74
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 60
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _chai = _interopRequireDefault(require("chai"));

var _chaiHttp = _interopRequireDefault(require("chai-http"));

var _app = _interopRequireDefault(require("../app"));

var _assert = require("assert");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var expect = (cov_1zylbvwgs3.s[0]++, _chai.default.expect);
cov_1zylbvwgs3.s[1]++;

_chai.default.use(_chaiHttp.default);

cov_1zylbvwgs3.s[2]++;
describe('Testing the Auth Route', function () {
  cov_1zylbvwgs3.f[0]++;
  cov_1zylbvwgs3.s[3]++;
  describe('Test the Signup Endpoint', function () {
    cov_1zylbvwgs3.f[1]++;
    cov_1zylbvwgs3.s[4]++;
    it('Should create a new user',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee() {
      var _chai$request$post$ty;

      var res;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              cov_1zylbvwgs3.f[2]++;
              cov_1zylbvwgs3.s[5]++;
              _context.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/signup/').type('form').send((_chai$request$post$ty = {
                "firstName": "Pat",
                "lastName": "Okuns",
                "country": "nigeria",
                "email": " jus@123.com",
                "dateOfBirth": "123",
                "gender": "Male"
              }, _defineProperty(_chai$request$post$ty, "email", "e@b.com"), _defineProperty(_chai$request$post$ty, "password", "123"), _chai$request$post$ty));

            case 4:
              res = _context.sent;
              cov_1zylbvwgs3.s[6]++;

              _chai.default.expect(res).to.have.status(201);

              cov_1zylbvwgs3.s[7]++;

              _chai.default.expect(res.body).to.be.a('object');

              cov_1zylbvwgs3.s[8]++;

              _chai.default.expect(res.body).to.have.property('token');

            case 11:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
  });
  cov_1zylbvwgs3.s[9]++;
  describe('Test the Signup Endpoint', function () {
    cov_1zylbvwgs3.f[3]++;
    cov_1zylbvwgs3.s[10]++;
    it('Should return an error for a user that already exit',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee2() {
      var _chai$request$post$ty2;

      var res;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              cov_1zylbvwgs3.f[4]++;
              cov_1zylbvwgs3.s[11]++;
              _context2.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/signup/').type('form').send((_chai$request$post$ty2 = {
                "firstName": "Pat",
                "lastName": "Okuns",
                "country": "nigeria",
                "email": " jus@123.com",
                "dateOfBirth": "123",
                "gender": "Male"
              }, _defineProperty(_chai$request$post$ty2, "email", "e@b.com"), _defineProperty(_chai$request$post$ty2, "password", "123"), _chai$request$post$ty2));

            case 4:
              res = _context2.sent;
              cov_1zylbvwgs3.s[12]++;

              _chai.default.expect(res).to.have.status(401);

              cov_1zylbvwgs3.s[13]++;

              _chai.default.expect(res.body).to.have.property('message');

            case 9:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));
  });
  cov_1zylbvwgs3.s[14]++;
  describe('Test the Login Endpoint', function () {
    cov_1zylbvwgs3.f[5]++;
    cov_1zylbvwgs3.s[15]++;
    it('Should throw an error for an unregistered email',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee3() {
      var res;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              cov_1zylbvwgs3.f[6]++;
              cov_1zylbvwgs3.s[16]++;
              _context3.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/login/').type('form').send({
                "email": "e@a.com",
                "password": "123"
              });

            case 4:
              res = _context3.sent;
              cov_1zylbvwgs3.s[17]++;

              _chai.default.expect(res).to.have.status(401);

              cov_1zylbvwgs3.s[18]++;

              _chai.default.expect(res.body).to.have.property('message');

            case 9:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    })));
  });
  cov_1zylbvwgs3.s[19]++;
  describe('Test the Login Endpoint', function () {
    cov_1zylbvwgs3.f[7]++;
    cov_1zylbvwgs3.s[20]++;
    it('Should throw an error for an unregistered email',
    /*#__PURE__*/
    _asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee4() {
      var res;
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              cov_1zylbvwgs3.f[8]++;
              cov_1zylbvwgs3.s[21]++;
              _context4.next = 4;
              return _chai.default.request(_app.default).post('/api/v1/auth/login/').type('form').send({
                "email": "e@b.com",
                "password": "123"
              });

            case 4:
              res = _context4.sent;
              cov_1zylbvwgs3.s[22]++;

              _chai.default.expect(res).to.have.status(401);

              cov_1zylbvwgs3.s[23]++;

              _chai.default.expect(res.body).to.have.property('message');

            case 9:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    })));
  }); // describe('Test the Send Message Endpoint', ()=>{
  //     it('Should not send mail when the email is not registered', async () => {
  //     const res = await chai.request(server).post('/api/v1/messages').type('form').send({
  //         "subject":"hi",
  //         "message":"loremmmmmmdsajddvzD AD aDAGSDGA IGIKD gosDHGO",
  //         "parentMessageId":"",
  //         "status":"draft",
  //         "recieversEmail":".com",
  //         "sendersEmail":"ggg"
  //     });
  //     chai.expect(res).to.have.status(401);
  //     chai.expect(res.body).to.have.prperty('message');
  //     });
  // });
  // // describe('Test the Send Message Endpoint', ()=>{
  //     it('Should send mail when the email is  registered',  (done) => {
  //    chai.request(server).post('/api/v1/messages').type('form').send({
  //         "subject":"hi",
  //         "message":"loremmmmmmdsajddvzD AD aDAGSDGA IGIKD gosDHGO",
  //         "parentMessageId":"",
  //         "status":"draft",
  //         "recieversEmail":"e@a.com",
  //         "sendersEmail":"ggg"
  //     }).end((err,res)=>{
  //         chai.expect(res).to.have.status(401);
  //         chai.expect(res).to.have.property('message');
  //         done();
  //     });
  //     });
  // });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,